
.grid-wrapper {
	width: 100%;
	height: 400px;
	overflow: auto;
	border: var(--grid-border-width) solid hsl(var(--grid-border));
	box-sizing: border-box;
}

.grid {
	height: 100%;
	flex-grow: 0;
	max-height: 600px;
	display: flex;
	flex-direction: column;
	overflow: auto;
	position: relative;
}

.grid-header {
	display: flex;
	flex-direction: column;
	width: 100%;
	position: sticky;
	top: -1px;
	z-index: 40;
}

.grid-header-row {
	background-color: hsl(var(--grid-header));
	display: flex;
	flex-direction: row;
	border-bottom: var(--grid-border-width) solid var(--border-color);
	width: 100%;
}

.grid-body-row {
	display: flex;
	flex-direction: row;
	border-bottom: var(--grid-border-width) solid hsl(var(--grid-border));
	width: 100%;
}

.grid-body {
	display: flex;
	flex-direction: column;
	width: 100%;
}

.grid-header-cell {
	width: var(--width);
	background-color: hsl(var(--grid-header-cell));
	min-width: var(--min-width);
	max-width: var(--max-width);
	flex-shrink: 0;
	padding: 8px;
	margin: 0;
	line-height: 1;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	position: relative;
	box-sizing: border-box;
	/* Move border to pseudo-element */
	&:not(:last-child)::after {
		content: '';
		position: absolute;
		right: 0;
		top: 0;
		bottom: 0;
		width: var(--grid-border-width);
		background-color: var(--grid-header-cell);
	}
}

.grid-body-cell {
	width: var(--width);
	background-color: hsl(var(--grid-body-cell));
	min-width: var(--min-width);
	max-width: var(--max-width);
	flex-shrink: 0;
	padding: 8px;
	margin: 0;
	line-height: 1;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	position: relative;
	box-sizing: border-box;
	/* Move border to pseudo-element */
	&:not(:last-child)::after {
		content: '';
		position: absolute;
		right: 0;
		top: 0;
		bottom: 0;
		width: var(--grid-border-width);
		background-color: var(--grid-body-cell);
	}
}

/* Group styles */
.grid-header-group {
	display: flex;
	flex-direction: column;
	background-color: hsl(var(--grid-header-group));
	/* Remove direct border */
	position: relative;
	/* Add border using pseudo-element */
	&:not(:last-child)::after {
		content: '';
		position: absolute;
		right: 0;
		top: 0;
		bottom: 0;
		width: var(--grid-border-width);
		background-color: var(--grid-header-group);
	}
}

.grid-header-group-cell {
	width: 100%;
	padding: 8px;
	margin: 0;
	line-height: 1;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	border-bottom: var(--grid-border-width) solid var(--grid-border-color);
	box-sizing: border-box;
}

/* Handle nested group borders */
.grid-header-group .grid-header-row {
	border-bottom: none;
	width: 100%;
}

.grid-header-group .grid-header-cell {
	border-bottom: none;
}

.grid-header-cell {
	gap: 0.5rem;
	display: flex;
	flex-direction: column;
}

/* Fix for group headers spanning multiple columns */
.grid-header-group {
	display: flex;
	flex-direction: column;
}

.grid-header-group .grid-header-group-cell {
	display: flex;
	justify-content: center;
	align-items: center;
}

/* Fix for nested header rows in groups */
.grid-header-group .grid-header-row {
	display: flex;
	flex-direction: row;
}

/* Optional: Add some padding and visual hierarchy */
.grid-header-cell,
.grid-body-cell,
.grid-header-group-cell {
	padding: 8px 8px;
}

.grid-header-group-cell {
	font-weight: bold;
}

/* Fix for the width calculations */
.grid-header-group {
	display: flex;
	flex-direction: column;
	box-sizing: border-box;
}

.sortable {
	cursor: pointer;
	user-select: none;
}
/* TODO */
.sortable:hover {
	background-color: rgba(0, 0, 0, 0.05);
}

.header-content {
	display: flex;
	align-items: center;
	gap: 8px;
	justify-content: space-between;
}

.sort-indicator {
	display: flex;
	align-items: center;
	opacity: 0.5;
}

.sortable:hover .sort-indicator {
	opacity: 1;
}

.grid-header-cell[data-sort-direction='asc'] .sort-indicator,
.grid-header-cell[data-sort-direction='desc'] .sort-indicator {
	opacity: 1;
}

/* TODO: change coloring */
.group-expand-inline-toggle {
	display: flex;
	align-items: center;
	background: none;
	border: none;
	cursor: pointer;
	padding: 0;
	margin: 0;
	gap: 0.5rem;
	flex-grow: 1;
}

.group-expand-inline-toggle:hover {
	background-color: rgba(0, 0, 0, 0.05);
}

.expand-icon {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	width: 20px;
	color: #666;
}

.group-value {
	font-weight: 600;
	color: #333;
	flex-grow: 1;
}

.group-items-count {
	color: #666;
	font-size: 0.8em;
	margin-left: auto;
}

.grid-group-row {
	background-color: hsl(var(--grid-row-even-background));
	display: flex;
	flex-direction: row;
	border-bottom: var(--grid-border-width) solid hsl(var(--grid-border));
	width: 100%;
}

.grid-group-row[data-expanded='true'] {
	background-color: hsl(var(--grid-row-odd-background));
}

.group-cell {
	display: flex;
	align-items: center;
}

/* Filtering */
.column-filter-input {
	background-color: hsl(var(--grid-row-odd-background));
	border-radius: 0.25rem;
	border: 1px solid hsl(var(--grid-border));
	padding: 0 0.5rem;
	height: 1.25rem;
	color: hsl(var(--grid-text-color));
}

/* Pinned column styles */
.grid-header-cell[data-pinned='left'],
.grid-body-cell[data-pinned='left'] {
	position: sticky;
	left: var(--pin-left-offset, 0);
	z-index: 2;
	background-color: white; /* Or your desired background color */
}

.grid-header-cell[data-pinned='right'],
.grid-body-cell[data-pinned='right'] {
	position: sticky;
	right: var(--pin-right-offset, 0);
	z-index: 2;
	background-color: white;
}

/* Ensure pinned headers stay above regular cells */
.grid-header-cell[data-pinned] {
	z-index: 3;
}

.pagination-container {
	background-color: hsl(var(--grid-header-background));
	border: var(--grid-border-width) solid var(--border-color);
}
